// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  name            String
  email           String            @unique
  password        String
  roleId          Int               @default(1)
  role            Role              @relation(fields: [roleId], references: [id])
  session         Session?
  grammarProgress GrammarProgress[]
  settings        UserSettings?
  dictionary      Dictionary[]
  lexiconProgress LexiconProgress[]
  statistics      Statistics[]
}

model UserSettings {
  id                             Int          @id @default(autoincrement())
  userId                         Int          @unique
  user                           User         @relation(fields: [userId], references: [id])
  countRepeatWordForLearned      Int
  countRepeatWordsSimultaneously Int
  learningModeWords              LearningMode
  learningModeTasks              LearningMode
}

model Lesson {
  id             Int    @id @default(autoincrement())
  name           String
  theory         String
  passingPercent Int
  tasks          Task[]
}

model Task {
  id              Int               @id @default(autoincrement())
  name            String
  description     String
  lessonId        Int
  lesson          Lesson            @relation(fields: [lessonId], references: [id])
  grammarProgress GrammarProgress[]
}

model GrammarProgress {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id])
  taskId Int
  task   Task @relation(fields: [taskId], references: [id])
}

model Dictionary {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  creatorId   Int
  userModel   User    @relation(fields: [creatorId], references: [id])
  words       Word[]
}

model Word {
  id              Int               @id @default(autoincrement())
  englishSpelling String
  transcription   String
  russianSpelling String
  description     String?
  dictionary      Dictionary[]
  LexiconProgress LexiconProgress[]
}

model LexiconProgress {
  id            Int     @id @default(autoincrement())
  progressCount Int
  isLearned     Boolean
  userId        Int
  user          User    @relation(fields: [userId], references: [id])
  wordId        Int
  word          Word    @relation(fields: [wordId], references: [id])
}

model Statistics {
  id         Int      @id @default(autoincrement())
  date       DateTime
  words      Int
  tasks      Int
  quizPoints Int
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
}

model Session {
  user         User   @relation(fields: [userId], references: [id])
  userId       Int    @unique
  refreshToken String
}

model Role {
  id          Int          @id @default(autoincrement())
  title       String
  permissions Permission[]
  users       User[]
}

model Permission {
  id         Int     @id @default(autoincrement())
  descriptor String
  context    String?
  method     Method
  roleId     Int
  role       Role    @relation(fields: [roleId], references: [id])
}

enum Method {
  ALL
  GET
  POST
  DELETE
  PUT
  PATCH
}

enum LearningMode {
  TRANSLATE_FROM_ENGLISH
  TRANSLATE_FROM_RUSSIAN
  COMBINED
}
